import{_ as t}from"./chunks/data_upload.BprzPkGi.js";import{_ as s,a as o}from"./chunks/code_prolog.CmozwF34.js";import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.BG_SpCm2.js";const r="/teamone/img/functions/content_tab.png",d="/teamone/img/functions/teamone_formula.gif",c="/teamone/img/functions/expand_collapse.png",p="/teamone/img/functions/drill_through.png",g="/teamone/img/functions/increase_indent.png",h="/teamone/img/functions/code_cube.png",m="/teamone/img/functions/code_view.png",u="/teamone/img/functions/code_view_subset_options.png",y="/teamone/img/functions/code_element_attributes.png",b="/teamone/img/functions/code_dimension.png",f="/teamone/img/functions/code_hierarchy.png",k="/teamone/img/functions/code_subset.png",x="/teamone/img/functions/code_element_rename.png",E="/teamone/img/functions/code_element_security.png",D="/teamone/img/functions/code_dimension_security.png",w="/teamone/img/functions/code_cube_security.png",_="/teamone/img/functions/code_application_security.png",A="/teamone/img/functions/code_process_security.png",C="/teamone/img/functions/code_epilog.png",S="/teamone/img/functions/code_comments.png",B=JSON.parse('{"title":"TeamOne","titleTemplate":"Content tab","description":"","frontmatter":{"title":"TeamOne","titleTemplate":"Content tab","outline":"deep"},"headers":[],"relativePath":"doc/functions.md","filePath":"doc/functions.md"}'),P={name:"doc/functions.md"};function v(O,e,T,F,N,M){return n(),i("div",null,e[0]||(e[0]=[l('<h1 id="content" tabindex="-1">Content <a class="header-anchor" href="#content" aria-label="Permalink to &quot;Content&quot;">​</a></h1><p>The <strong>Content</strong> tab lists sheets that include TeamOne content so you can quickly navigate TeamOne <strong>Explorations</strong> and <strong>formulas</strong>. From here you can trigger actions on the active sheet—<a href="#expand-collapse">Expand/Collapse</a> exploration rows, <a href="#upload-data">Upload data</a> back to IBM Planning Analytics (TM1), <a href="#drill-through">Drill-through</a> to detailed data, <a href="#increase-indent">Increase/Decrease indent</a>—and you can <a href="#recalculate-all">Recalculate all</a> sheets that contain TeamOne content.</p><p><img src="'+r+'" alt="img" data-zoomable=""></p><h2 id="recalculate" tabindex="-1">Recalculate <a class="header-anchor" href="#recalculate" aria-label="Permalink to &quot;Recalculate {#recalculate}&quot;">​</a></h2><p>Recalculates all <a href="./formulas.html">TEAMONE()</a> formulas and the <a href="./explorer.html">Exploration</a> on the current sheet. Refresh time depends on your IBM Planning Analytics model complexity, the number of formulas on the sheet, and the volume of exploration data. It may take a few seconds or longer.</p><p><img src="'+d+'" alt="img"></p><h2 id="expand-collapse" tabindex="-1">Expand/Collapse <a class="header-anchor" href="#expand-collapse" aria-label="Permalink to &quot;Expand/Collapse {#expand-collapse}&quot;">​</a></h2><p>Expands or collapses the selected exploration cell—equivalent to expanding/collapsing a consolidation element in the dimension subset editor in <a href="./explorer.html">Explorer</a>.</p><p>TeamOne will <strong>toggle the element state</strong> (collapsed → expanded or expanded → collapsed), then <strong>save</strong> and <strong>refresh</strong> the current sheet’s exploration.</p><p><img src="'+c+'" alt="img" data-zoomable=""></p><h2 id="upload-data" tabindex="-1">Upload data <a class="header-anchor" href="#upload-data" aria-label="Permalink to &quot;Upload data {#upload-data}&quot;">​</a></h2><p>After you edit Exploration or TEAMONE() values in Google Sheets, you can upload (submit) the changes back to IBM Planning Analytics.</p><p><img src="'+t+'" alt="img" data-zoomable=""></p><h2 id="drill-through" tabindex="-1">Drill-through <a class="header-anchor" href="#drill-through" aria-label="Permalink to &quot;Drill-through {#drill-through}&quot;">​</a></h2><p>If drill-through links are defined in IBM Planning Analytics, you can drill through from TeamOne Explorations to view detailed data (cube views, databases, or files). Select an exploration cell in Google Sheets and choose <strong>Drill-through</strong> from the menu.</p><p><img src="'+p+'" alt="img" data-zoomable=""></p><h2 id="increase-indent" tabindex="-1">Increase indent <a class="header-anchor" href="#increase-indent" aria-label="Permalink to &quot;Increase indent {#increase-indent}&quot;">​</a></h2><p>Google Sheets lacks built-in increase/decrease cell indentation. <strong>Increase indent</strong> adds one leading space to selected cells. This is helpful when defining a TM1 <a href="./functions.html#dimension">dimension hierarchy</a> using space indentation.</p><p><img src="'+g+'" alt="img" data-zoomable=""></p><h2 id="decrease-indent" tabindex="-1">Decrease indent <a class="header-anchor" href="#decrease-indent" aria-label="Permalink to &quot;Decrease indent {#decrease-indent}&quot;">​</a></h2><p>The opposite action—<strong>Decrease indent</strong> removes one leading space from the selected cells.</p><h2 id="recalculate-all" tabindex="-1">Recalculate all <a class="header-anchor" href="#recalculate-all" aria-label="Permalink to &quot;Recalculate all {#recalculate-all}&quot;">​</a></h2><p>Use <strong>Recalculate all</strong> to recalculate all sheets—or multiple selected sheets—that contain TeamOne content.</p><hr><h2 id="add-code" tabindex="-1">Add code <a class="header-anchor" href="#add-code" aria-label="Permalink to &quot;Add code {#add-code}&quot;">​</a></h2><p>While PAW offers a web UI for TM1 modeling, it can still be tedious to build, document, and deploy changes. <strong>TeamOne</strong> lets you create/update TM1 cubes, views, dimensions, hierarchies, subsets, elements, and attributes; manage users, groups, permissions, and object security—<strong>without writing TI code by hand</strong>. In practice, you draft your model in Sheets (which doubles as living documentation), and TeamOne applies it to TM1 automatically.</p><p>Benefits:</p><ul><li>Collaborate with your whole team on new requirements or change requests.</li><li>A requirements draft can replace up to <strong>95%</strong> of manual development.</li><li>Involve analysts and business users (e.g., translate element captions) and sync them to TM1 in one click.</li><li>Documentation exists <strong>before</strong> implementation and stays updated as you change anything.</li><li>Prototype and implement real models in seconds.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This functionality requires the TM1 <strong>ADMIN</strong> group. The UI is hidden automatically for non-admin users.</p></div><p><strong>Add code</strong> opens a template picker for:</p><ul><li>Create/update cube</li><li>Create/update view</li><li>Create/update dimension hierarchy</li><li>Create/update subset</li><li>Manage cube security</li><li>Manage dimension security</li><li>Manage element security</li><li>Manage application security</li><li>Manage process security</li><li>Add prolog code</li><li>Add epilog code</li></ul><p>Fill out the template and click <strong>ADD TO ACTIVE SHEET</strong>. You can then refine fields directly in the code block. When ready, <a href="#format-code">Format</a> and <a href="#run-code">Run</a> the code.</p><h3 id="cube" tabindex="-1">::cube <a class="header-anchor" href="#cube" aria-label="Permalink to &quot;::cube {#cube}&quot;">​</a></h3><p>Use <strong><code>::cube</code></strong> to create or update cubes. Specify the cube name in <strong>Column B</strong>.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Recreate the cube (no value needed in Column B). Useful in DEV when changing cube dimensions. <strong>Important:</strong> recreating deletes all cube data.</td></tr><tr><td style="text-align:left;"><code>-caption</code></td><td style="text-align:left;">Set a cube caption. Localize with multiple options in the form <strong><code>-caption:locale</code></strong> (e.g., <code>-caption:en</code>, <code>-caption:fr</code>). The locale must exist in the <strong>}Cultures</strong> dimension.</td></tr><tr><td style="text-align:left;">Dimension 1–N</td><td style="text-align:left;">One row per cube dimension, in the desired order (TM1 supports up to 256 dimensions).</td></tr></tbody></table><p>Example: create an <strong>XR</strong> cube with 3 dimensions and an <em>Exchange Rates</em> caption. You can add other localized captions later.</p><p><img src="'+h+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=96363892" target="_blank" rel="noreferrer">::cube example</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For existing cubes, generate a cube definition from the Model tab’s <a href="./model.html#cube-node">cube menu</a>.</p></div><h3 id="view" tabindex="-1">::view <a class="header-anchor" href="#view" aria-label="Permalink to &quot;::view {#view}&quot;">​</a></h3><p>Use <strong><code>::view</code></strong> to create or update a cube view. Specify the view name in <strong>Column B</strong>.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-cube</code></td><td style="text-align:left;">Cube name.</td></tr><tr><td style="text-align:left;"><code>-subset</code></td><td style="text-align:left;">Default subset in the form <strong><code>$SubsetName</code></strong>. Applied to omitted dimensions. If omitted, the <strong><a href="#subset-keywords">$ALL</a></strong> keyword is used.</td></tr><tr><td style="text-align:left;"><code>-alias</code></td><td style="text-align:left;">Default alias applied to each created subset. Existing subsets keep their alias.</td></tr><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Recreate the default subset specified by <code>-subset</code>. For example, if <code>-subset</code> is <code>[$LEAVES](#subset-keywords)</code>, this recreates <strong>LEAVES</strong> for each omitted dimension.</td></tr><tr><td style="text-align:left;">Dimension 1–N</td><td style="text-align:left;">Put a dimension name in <strong>Column A</strong>, the subset/expression in <strong>Column B</strong>, and subset options in <strong>Column C</strong>. Use <code>R:dimensionName</code> or <code>C:dimensionName</code> to mark row/column axes.</td></tr></tbody></table><p><strong>Column B</strong> accepts:</p><ul><li>A semicolon-delimited element list, e.g. <code>Actual;Budget;Forecast</code></li><li>An existing subset name as <strong><code>$SubsetName</code></strong></li><li>System keywords <strong><a href="#subset-keywords">$ALL</a></strong>, <strong><a href="#subset-keywords">$LEAVES</a></strong>, <strong><a href="#subset-keywords">$ROOTS</a></strong> (TeamOne creates these if missing using the MDX under <a href="#subset-keywords">Subset keywords</a>)</li><li>A valid MDX expression, e.g. <code>{[Calendar].[2022].Children}</code></li><li>Wildcard patterns: <code>/*substring*/</code> or <code>/2022 Q?/*</code></li><li>A subset <a href="#subset-keywords">keyword</a></li></ul><p>You can combine elements, patterns, MDX, <a href="#subset-keywords">keywords</a>, and <a href="#mdx-mods">MDX mods</a> in a semicolon-delimited list, e.g.: <code>Current period;Previous period;{[Calendar].[2022].Children};/2022 Q?/*</code> If <strong>Column B</strong> is empty, the <code>-subset</code> option is used.</p><p><img src="'+m+'" alt="img" data-zoomable=""></p><p><strong>Column C</strong> holds subset options, e.g. <code>-name:Total Company -alias:Caption_Base</code>. See more under <a href="#subset">::subset</a>.</p><p><img src="'+u+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=1467356606" target="_blank" rel="noreferrer">::view example</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For existing cubes, generate a view definition from the Model tab’s <a href="./model.html#cube-node">cube</a> or <a href="./model.html#view-node">view</a> menu.</p></div><h3 id="rule" tabindex="-1">::rule <a class="header-anchor" href="#rule" aria-label="Permalink to &quot;::rule {#rule}&quot;">​</a></h3><p>Use <strong><code>::rule</code></strong> to create or update cube rules.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-cube</code></td><td style="text-align:left;">Cube name.</td></tr><tr><td style="text-align:left;">Rule line 1–N</td><td style="text-align:left;">Add as many lines as needed to define calculation rules.</td></tr></tbody></table><h3 id="dimension" tabindex="-1">::dimension <a class="header-anchor" href="#dimension" aria-label="Permalink to &quot;::dimension {#dimension}&quot;">​</a></h3><p><img src="'+s+'" alt="img"></p><p>Use <strong><code>::dimension</code></strong> to create or update dimensions. Put the dimension name in <strong>Column B</strong>. Starting <strong>Column C</strong>, define element attributes as <code>AttributeName:AttributeType:AttributeLocale</code>:</p><ul><li><strong>Type</strong>: <code>S</code> (string, default), <code>A</code> (alias), <code>N</code> (numeric)</li><li><strong>Locale</strong>: element from the <strong>}Cultures</strong> dimension (optional)</li></ul><p>You may omit Type and/or Locale; defaults to a non-localized string attribute. For example, TeamOne can create <strong>Caption</strong> (alias), <strong>MonthNumber</strong> (numeric), and <strong>MonthName</strong> (string) attributes:</p><p><img src="'+y+'" alt="img" data-zoomable=""></p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-hierarchy</code></td><td style="text-align:left;">Create an alternative hierarchy; if omitted, updates the default hierarchy.</td></tr><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Rebuild elements (no value in Column B). <strong>DEV only</strong>—deletes and rebuilds hierarchy. <strong>Important:</strong> data for deleted elements is lost.</td></tr><tr><td style="text-align:left;"><code>-componentSort</code></td><td style="text-align:left;"><code>ByInput</code> (default) or <code>ByName</code>.</td></tr><tr><td style="text-align:left;"><code>-componentOrder</code></td><td style="text-align:left;"><code>Ascending</code> (default) or <code>Descending</code>.</td></tr><tr><td style="text-align:left;"><code>-elementSort</code></td><td style="text-align:left;"><code>ByHierarchy</code> (default), <code>ByInput</code>, <code>ByName</code>, or <code>ByLevel</code>.</td></tr><tr><td style="text-align:left;"><code>-elementOrder</code></td><td style="text-align:left;"><code>Ascending</code> (default) or <code>Descending</code>.</td></tr><tr><td style="text-align:left;"><code>-caption</code></td><td style="text-align:left;">Set/localize a dimension caption via multiple <strong><code>-caption:locale</code></strong> entries. Locales must exist in <strong>}Cultures</strong>.</td></tr><tr><td style="text-align:left;"><code>-subset.alias</code></td><td style="text-align:left;">Alias to use for Default and system subsets (ALL, LEAVES, ROOTS).</td></tr><tr><td style="text-align:left;"><code>-subset.expandabove</code></td><td style="text-align:left;">Enable “expand above” on Default and system subsets.</td></tr><tr><td style="text-align:left;"><code>-subset.dynamic</code></td><td style="text-align:left;">Make Default and system subsets dynamic.</td></tr><tr><td style="text-align:left;"><code>-subset.leaves</code></td><td style="text-align:left;">Expression for <strong>LEAVES</strong>; falls back to <a href="#subset-keywords">$LEAVES</a>.</td></tr><tr><td style="text-align:left;"><code>-subset.all</code></td><td style="text-align:left;">Expression for <strong>ALL</strong>; falls back to <a href="#subset-keywords">$ALL</a>.</td></tr><tr><td style="text-align:left;"><code>-subset.roots</code></td><td style="text-align:left;">Expression for <strong>ROOTS</strong>; falls back to <a href="#subset-keywords">$ROOTS</a>.</td></tr><tr><td style="text-align:left;">Element 1–N</td><td style="text-align:left;">One row per element. Build hierarchy either with <strong>space indentation in Column A</strong> or by specifying <strong>parent in Column B</strong>. Append <code>:S</code> for string element or <code>:-1</code> for child weight −1, etc. If attributes are defined in headers, populate values in their columns.</td></tr></tbody></table><p>Example: build a <strong>Period</strong> dimension with 2022/2023 months, add <strong>en</strong> and <strong>fr</strong> captions, and create Default/system subsets:</p><p><img src="'+b+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=88848437" target="_blank" rel="noreferrer">::dimension example</a></p><p>Add a <strong>Fiscal Quarter</strong> alternative hierarchy:</p><p><img src="'+f+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=416332645" target="_blank" rel="noreferrer">::hierarchy example</a></p><h3 id="subset" tabindex="-1">::subset <a class="header-anchor" href="#subset" aria-label="Permalink to &quot;::subset {#subset}&quot;">​</a></h3><p>Use <strong><code>::subset</code></strong> to create or update subsets. Put the subset name in <strong>Column B</strong>.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-dimension</code></td><td style="text-align:left;">Target dimension.</td></tr><tr><td style="text-align:left;"><code>-hierarchy</code></td><td style="text-align:left;">Target hierarchy (optional); default hierarchy if omitted.</td></tr><tr><td style="text-align:left;"><code>-alias</code></td><td style="text-align:left;">Subset alias.</td></tr><tr><td style="text-align:left;"><code>-expandabove</code></td><td style="text-align:left;">Set the subset “expand above” flag (use <code>False</code> to disable).</td></tr><tr><td style="text-align:left;"><code>-dynamic</code></td><td style="text-align:left;">Create a dynamic subset.</td></tr><tr><td style="text-align:left;">Element 1–N</td><td style="text-align:left;">One row per selection. See syntax below.</td></tr></tbody></table><p><strong>Column A</strong> accepts:</p><ul><li>Element name</li><li>Semicolon-delimited list, e.g. <code>Actual;Budget;Forecast</code></li><li>MDX, e.g. <code>{[Calendar].[2022].Children}</code></li><li>Wildcards: <code>/*substring*/</code> or <code>/2022 Q?/*</code></li><li>Subset <a href="#subset-keywords">keywords</a></li></ul><p>You can combine elements, patterns, MDX, <a href="#subset-keywords">keywords</a>, and <a href="#mdx-mods">MDX mods</a>, e.g.: <code>Current period;Previous period;{[Calendar].[2022].Children};/2022 Q?/*</code></p><p>For instance, here are a few subsets for the <strong>Period</strong> dimension: (<a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=416332645" target="_blank" rel="noreferrer">https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=416332645</a>)</p><p><img src="'+k+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=771454322" target="_blank" rel="noreferrer">::subset example</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For existing dimensions, generate a dimension or hierarchy definition from the Model tab’s <a href="./model.html#dimension-node">dimension</a> or <a href="./model.html#hierarchy-node">hierarchy</a> menu.</p></div><h4 id="subset-keywords" tabindex="-1">Subset keywords <a class="header-anchor" href="#subset-keywords" aria-label="Permalink to &quot;Subset keywords {#subset-keywords}&quot;">​</a></h4><p>TeamOne simplifies <strong>ALL</strong>, <strong>LEAVES</strong>, and <strong>ROOTS</strong> via keywords. Where supported (e.g., <a href="#view">::view</a>, <a href="#dimension">::dimension</a>), you can use a keyword instead of a subset name or MDX. TeamOne will create the subset if missing:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Keyword</th><th style="text-align:left;">Meaning / MDX used when creating</th></tr></thead><tbody><tr><td style="text-align:left;"><code>$ALL</code></td><td style="text-align:left;">“All members (hierarchized)”: <code>{HIERARCHIZE({[dimensionName].[hierarchyName].members})}</code></td></tr><tr><td style="text-align:left;"><code>$LEAVES</code></td><td style="text-align:left;">“Level 0 members”: <code>{TM1FILTERBYLEVEL({[dimensionName].[hierarchyName].members}, 0)}</code></td></tr><tr><td style="text-align:left;"><code>$ROOTS</code></td><td style="text-align:left;">“Top-level (no parent) members”: <code>{FILTER({[dimensionName].[hierarchyName].members}, [dimensionName].[hierarchyName].CurrentMember.Parent.Name = &quot;&quot;)}</code></td></tr></tbody></table><h4 id="mdx-mods" tabindex="-1">MDX mods <a class="header-anchor" href="#mdx-mods" aria-label="Permalink to &quot;MDX mods {#mdx-mods}&quot;">​</a></h4><p>Instead of writing full MDX, you can <strong>modify</strong> a base set using short <em>MDX mods</em>. This makes expressions easier for non-technical users.</p><p>Full MDX:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FILTER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TM1FILTERBYLEVEL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">TM1DRILLDOWNMEMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( {[</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].[</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].[</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">FY2025</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ) }, 0 ) },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [Period].[Period].[quarter] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Q3&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span></code></pre></div><p>Equivalent with MDX mods:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FY2025</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expand </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> quarter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Q3</span></span></code></pre></div><p>Wildcards are supported:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">FY20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> descendants </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> first</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span></code></pre></div><p>Append mods to a set after <code>&gt;&gt;</code>. Supported mods:</p><table tabindex="0"><thead><tr><th style="text-align:left;">MDX mod</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ancestors</code></td><td style="text-align:left;">First parent for each member. Wraps as: <code>{HIERARCHIZE({GENERATE(${mdx}, UNION({[Dim].[Hier].CurrentMember.Ancestors}, {[Dim].[Hier].CurrentMember}))})}</code></td></tr><tr><td style="text-align:left;"><code>ancestorsall</code></td><td style="text-align:left;">All parents for each member. Similar to above, using <code>.AncestorsAll</code>.</td></tr><tr><td style="text-align:left;"><code>expand</code></td><td style="text-align:left;">Drill down all members: <code>{TM1DRILLDOWNMEMBER(${mdx}, ALL)}</code></td></tr><tr><td style="text-align:left;"><code>children</code></td><td style="text-align:left;">Direct children: <code>{GENERATE(${mdx}, [${dim}].[${hier}].CurrentMember.Children)}</code></td></tr><tr><td style="text-align:left;"><code>descendants</code></td><td style="text-align:left;">All descendants: <code>{DESCENDANTS(${mdx})}</code></td></tr><tr><td style="text-align:left;"><code>distinct</code></td><td style="text-align:left;">Remove duplicates: <code>{DISTINCT(${mdx})}</code></td></tr><tr><td style="text-align:left;"><code>first=&lt;n&gt;</code></td><td style="text-align:left;">First <em>n</em> members: <code>{HEAD(${mdx}, &lt;n&gt;)}</code></td></tr><tr><td style="text-align:left;"><code>last=&lt;n&gt;</code></td><td style="text-align:left;">Last <em>n</em> members: <code>{TAIL(${mdx}, &lt;n&gt;)}</code></td></tr><tr><td style="text-align:left;"><code>level=&lt;n&gt;</code></td><td style="text-align:left;">Filter by level: <code>{TM1FILTERBYLEVEL(${mdx}, &lt;n&gt;)}</code></td></tr><tr><td style="text-align:left;"><code>sortasc</code></td><td style="text-align:left;">Sort ascending: <code>{TM1SORT(${mdx}, ASC)}</code></td></tr><tr><td style="text-align:left;"><code>sortasc=&lt;Attribute&gt;</code></td><td style="text-align:left;">Sort ascending by attribute: <code>{ORDER(${mdx}, [Dim].[Attribute], ASC)}</code></td></tr><tr><td style="text-align:left;"><code>sortdesc</code></td><td style="text-align:left;">Sort descending: <code>{TM1SORT(${mdx}, DESC)}</code></td></tr><tr><td style="text-align:left;"><code>sortdesc=&lt;Attribute&gt;</code></td><td style="text-align:left;">Sort descending by attribute: <code>{ORDER(${mdx}, [Dim].[Attribute], DESC)}</code></td></tr><tr><td style="text-align:left;"><code>&lt;attribute&gt;=&lt;Val1|Val2,...&gt;</code></td><td style="text-align:left;">Attribute filter. Multiple values via pipe: <code>quarter=Q1|Q2</code>. Wildcards allowed. Maps to <code>FILTER</code> or <code>TM1FILTERBYPATTERN</code> depending on value.</td></tr><tr><td style="text-align:left;"><code>toggle=&lt;Elm1,Elm2,...&gt;</code></td><td style="text-align:left;">Toggle (expand/collapse) specific elements: <code>{ToggleDrillState(${mdx}, {[Dim].[Hier].[Elm1]}, {[Dim].[Hier].[Elm2]}, ...)}</code></td></tr></tbody></table><h3 id="element-rename" tabindex="-1">::element.rename <a class="header-anchor" href="#element-rename" aria-label="Permalink to &quot;::element.rename {#element-rename}&quot;">​</a></h3><p>Use <strong><code>::element.rename</code></strong> to rename dimension/hierarchy elements <strong>without losing data</strong>.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-dimension</code></td><td style="text-align:left;">Dimension name.</td></tr><tr><td style="text-align:left;"><code>-hierarchy</code></td><td style="text-align:left;">Hierarchy (optional; default hierarchy if omitted).</td></tr><tr><td style="text-align:left;">Element 1–N</td><td style="text-align:left;">Put existing element names in <strong>Column A</strong> and new names in <strong>Column B</strong>. Non-existing elements are skipped (e.g., already renamed or typo).</td></tr></tbody></table><p><img src="'+x+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=1619768620" target="_blank" rel="noreferrer">::element.rename example</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can combine <a href="#element-rename">::element.rename</a> and <a href="#dimension">::dimension</a> blocks on the same sheet to manage a dimension from one place.</p></div><h3 id="element-security" tabindex="-1">::element.security <a class="header-anchor" href="#element-security" aria-label="Permalink to &quot;::element.security {#element-security}&quot;">​</a></h3><p>Use <strong><code>::element.security</code></strong> to define <strong>element-level security</strong>.</p><p>Define group sets starting from <strong>Column C</strong>. In each group column you may use:</p><ul><li>A subset name like <strong><code>$SubsetName</code></strong></li><li>A single group name</li><li>A semicolon-delimited list, e.g. <code>Group 1; Group 2; Group 3</code></li><li>MDX, e.g. <code>{[}Groups].members}</code></li><li>Wildcards, e.g. <code>/*substring*/</code> or <code>/Sec*Level?/*</code></li><li>A subset <a href="#subset-keywords">keyword</a></li></ul><p>You can combine patterns, MDX, <a href="#subset-keywords">keywords</a>, and <a href="#mdx-mods">MDX mods</a> within the same cell.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Wipe all existing element security first.</td></tr><tr><td style="text-align:left;"><code>-createGroups</code></td><td style="text-align:left;">Create non-existing groups if needed.</td></tr><tr><td style="text-align:left;"><code>-dimension</code></td><td style="text-align:left;"><strong>Required</strong> dimension name.</td></tr><tr><td style="text-align:left;"><code>-hierarchy</code></td><td style="text-align:left;">Optional hierarchy name (default hierarchy if omitted).</td></tr><tr><td style="text-align:left;">Element 1–N</td><td style="text-align:left;">One row per element selector. Under each group column, set privileges: <code>NONE</code>, <code>READ</code>, <code>WRITE</code>, <code>RESERVE</code>, <code>ADMIN</code>, or <code>LOCK</code>. Blank defaults to <code>NONE</code>.</td></tr></tbody></table><p><strong>Element selector</strong> (Column A) supports:</p><ul><li>A single element name</li><li>A semicolon-delimited element list (e.g. <code>FY2022 Jan;FY2022 Feb;FY2022 Mar</code>)</li><li>MDX (e.g. <code>{[Period].[Fiscal Quarter].[FY2022 Q1].children}</code>)</li><li>Wildcards (e.g. <code>/*substring*/</code> or <code>/FY202? */*</code>)</li><li>A subset <a href="#subset-keywords">keyword</a></li></ul><p><img src="'+E+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=1345394917" target="_blank" rel="noreferrer">::element.security example</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Generate <strong><code>::element.security</code></strong> from the Model tab’s <a href="./model.html#dimension-node">dimension</a> or <a href="./model.html#hierarchy-node">hierarchy</a> menu.</p></div><h3 id="dimension-security" tabindex="-1">::dimension.security <a class="header-anchor" href="#dimension-security" aria-label="Permalink to &quot;::dimension.security {#dimension-security}&quot;">​</a></h3><p>Use <strong><code>::dimension.security</code></strong> to define <strong>dimension and hierarchy security</strong> (hierarchy security introduced in <a href="https://www.ibm.com/support/pages/changes-hierarchy-security-ibm-planning-analytics-2095" target="_blank" rel="noreferrer">IBM Planning Analytics 2.0.9.5</a>).</p><p>Group definitions start at <strong>Column C</strong>. In each group column you may use subset names, single names, lists, MDX, or wildcards (same options as element security).</p><p>Patterns are great for alternate hierarchies—for example, <code>/Product:/*</code> targets all hierarchies of the <strong>Product</strong> dimension.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Wipe all existing dimension/hierarchy security first.</td></tr><tr><td style="text-align:left;"><code>-createGroups</code></td><td style="text-align:left;">Create non-existing groups if needed.</td></tr><tr><td style="text-align:left;">Dimension/Hierarchy 1–N</td><td style="text-align:left;">One row per target in the form <code>dimension:hierarchy</code> (hierarchy optional). Under each group column, set privileges: <code>NONE</code> or <code>READ</code>. Blank defaults to <code>NONE</code>.</td></tr></tbody></table><p><strong>Selector syntax:</strong></p><ul><li>Dimension name (or <code>dimension:hierarchy</code>)</li><li>Semicolon list (e.g. <code>Calendar:Fiscal Year;Employee;Job Type Assumption</code>)</li><li>MDX (e.g. <code>{[}Dimensions].members}</code>)</li><li>Wildcards (e.g. <code>/*substring*/</code> or <code>/Revenu?:*/</code>)</li><li>Subset <a href="#subset-keywords">keywords</a></li></ul><p><img src="'+D+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=1309406887" target="_blank" rel="noreferrer">::dimension.security example</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Generate <strong><code>::dimension.security</code></strong> from the Model tab’s <a href="./model.html#dimensions-node">dimensions</a> menu.</p></div><h3 id="cube-security" tabindex="-1">::cube.security <a class="header-anchor" href="#cube-security" aria-label="Permalink to &quot;::cube.security {#cube-security}&quot;">​</a></h3><p>Use <strong><code>::cube.security</code></strong> to define <strong>cube-level security</strong>.</p><p>Group definitions start at <strong>Column C</strong>. You may use subset names, single names, lists, MDX, or wildcards (same options as above).</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Wipe all existing cube security first.</td></tr><tr><td style="text-align:left;"><code>-createGroups</code></td><td style="text-align:left;">Create non-existing groups if needed.</td></tr><tr><td style="text-align:left;">Cube 1–N</td><td style="text-align:left;">One row per cube. Under each group column, set privileges: <code>NONE</code>, <code>READ</code>, <code>WRITE</code>, <code>RESERVE</code>, <code>ADMIN</code>, <code>LOCK</code>. Blank defaults to <code>NONE</code>.</td></tr></tbody></table><p><strong>Cube selector</strong> supports:</p><ul><li>Cube name</li><li>Semicolon list (e.g. <code>Calendar;Employee;Job Type Assumption</code>)</li><li>MDX (e.g. <code>{[}Cubes].members}</code>)</li><li>Wildcards (e.g. <code>/*substring*/</code> or <code>/Revenu?/*</code>)</li><li>Subset <a href="#subset-keywords">keywords</a></li></ul><p><img src="'+w+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=500785990" target="_blank" rel="noreferrer">::cube.security example</a></p><div class="tip custom-block"><p class="custom-block-title">Cube dimension security</p><p>When you grant cube access (e.g., <code>READ</code> on <strong>Revenue</strong> to <strong>Group B</strong>), TeamOne ensures each <strong>dimension in that cube</strong> has at least <code>READ</code>—but preserves any stronger existing access (e.g., <code>WRITE</code> on <strong>Product</strong> remains <code>WRITE</code>).</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Generate <strong><code>::cube.security</code></strong> from the Model tab’s <a href="./model.html#cubes-node">cubes</a> menu.</p></div><h3 id="application-security" tabindex="-1">::application.security <a class="header-anchor" href="#application-security" aria-label="Permalink to &quot;::application.security {#application-security}&quot;">​</a></h3><p>Use <strong><code>::application.security</code></strong> to define <strong>application entry security</strong>.</p><p>Group definitions start at <strong>Column C</strong>. Same input options as other security blocks (subsets, names, lists, MDX, wildcards).</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Wipe all existing application security first.</td></tr><tr><td style="text-align:left;"><code>-createGroups</code></td><td style="text-align:left;">Create non-existing groups if needed.</td></tr><tr><td style="text-align:left;">Application 1–N</td><td style="text-align:left;">One row per application entry. Under each group column, set privileges: <code>NONE</code>, <code>READ</code>, or <code>ADMIN</code>. Blank defaults to <code>NONE</code>.</td></tr></tbody></table><p><strong>Application selector</strong> supports:</p><ul><li>Entry name, e.g. <code>Analysis\\Employee.view</code></li><li>Semicolon list (e.g. <code>Analysis\\Employee.view;Analysis\\Expenses.view</code>)</li><li>MDX (e.g. <code>&quot;{TM1DRILLDOWNMEMBER( {[}ApplicationEntries].[Analysis]}, ALL, RECURSIVE )}&quot;</code>)</li><li>Wildcards (e.g. <code>/Reports\\*/*</code> or <code>/Reports.????/*</code>)</li><li>Subset <a href="#subset-keywords">keywords</a></li></ul><p><img src="'+_+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=1421602536" target="_blank" rel="noreferrer">::application.security example</a></p><div class="tip custom-block"><p class="custom-block-title">Default application security</p><p>Use <code>-recreate</code> to default all application entries to <code>READ</code>, then restrict specific entries with <code>NONE</code>, <code>READ</code>, or <code>ADMIN</code>.</p></div><h3 id="process-security" tabindex="-1">::process.security <a class="header-anchor" href="#process-security" aria-label="Permalink to &quot;::process.security {#process-security}&quot;">​</a></h3><p>Use <strong><code>::process.security</code></strong> to define <strong>process security</strong>.</p><p>Group definitions start at <strong>Column C</strong>. Same input options as other security blocks (subsets, names, lists, MDX, wildcards).</p><table tabindex="0"><thead><tr><th style="text-align:left;">Option / parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>-recreate</code></td><td style="text-align:left;">Wipe all existing process security first.</td></tr><tr><td style="text-align:left;"><code>-createGroups</code></td><td style="text-align:left;">Create non-existing groups if needed.</td></tr><tr><td style="text-align:left;">Process 1–N</td><td style="text-align:left;">One row per process. Under each group column, set privileges: <code>NONE</code> or <code>READ</code>. Blank defaults to <code>NONE</code>.</td></tr></tbody></table><p><strong>Process selector</strong> supports:</p><ul><li>Process name</li><li>Semicolon list (e.g. <code>copy_version;create_version;cache_views</code>)</li><li>MDX (e.g. <code>{[}Processes].members}</code>)</li><li>Wildcards (e.g. <code>/*substring*/</code> or <code>/*vers?ion*/*</code>)</li><li>Subset <a href="#subset-keywords">keywords</a></li></ul><p><img src="'+A+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=1042124305" target="_blank" rel="noreferrer">::process.security example</a></p><h3 id="code-prolog" tabindex="-1">::code.prolog <a class="header-anchor" href="#code-prolog" aria-label="Permalink to &quot;::code.prolog {#code-prolog}&quot;">​</a></h3><p>Use <strong><code>::prolog.code</code></strong> (or simply <strong><code>::code</code></strong>) to write <strong>prolog</strong> code. This is handy with Sheets formulas—for example, generate and populate TM1 functions based on cell values:</p><p><img src="'+o+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=749532791" target="_blank" rel="noreferrer">::code.prolog example</a></p><h3 id="code-epilog" tabindex="-1">::code.epilog <a class="header-anchor" href="#code-epilog" aria-label="Permalink to &quot;::code.epilog {#code-epilog}&quot;">​</a></h3><p>Use <strong><code>::epilog.code</code></strong> to write <strong>epilog</strong> code. This is also useful with Sheets formulas—for example, finalize/clean up after TM1 actions:</p><p><img src="'+C+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=398634546" target="_blank" rel="noreferrer">::code.epilog example</a></p><h2 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments {#comments}&quot;">​</a></h2><p>You can use single-line and multi-line comments in <code>::code</code> blocks:</p><ul><li><code>#</code> comments a single line.</li><li><code>#[</code> and <code>#]</code> wrap a multi-line comment block.</li></ul><p><img src="'+S+'" alt="img" data-zoomable=""></p><p>See <a href="https://docs.google.com/spreadsheets/d/1wOI8onSk2GoOoVzSDh_EPbZj5pN5iQPPK62cDV3sr7k/edit#gid=976998592" target="_blank" rel="noreferrer">comments example</a></p><h2 id="format-code" tabindex="-1">Format code <a class="header-anchor" href="#format-code" aria-label="Permalink to &quot;Format code {#format-code}&quot;">​</a></h2><p>Formats code to read like documentation:</p><ul><li>Code block headers: white text on <strong>indigo</strong> background</li><li><code>-options</code>: <em>italic</em> text</li><li>Comments: grey text</li><li>Alternating row backgrounds</li><li>Row grouping by code block</li></ul><h2 id="run-code" tabindex="-1">Run code <a class="header-anchor" href="#run-code" aria-label="Permalink to &quot;Run code {#run-code}&quot;">​</a></h2><p>Executes the <a href="#add-code">code blocks</a> on the current sheet.</p>',161)]))}const L=a(P,[["render",v]]);export{B as __pageData,L as default};
